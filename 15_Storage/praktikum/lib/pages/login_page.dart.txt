import 'package:ararya_hafizh/14/style.dart.txt';
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

class LoginPage extends StatefulWidget {
  const LoginPage({super.key});

  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final _username = TextEditingController();
  final _password = TextEditingController();
  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();
  bool _passwordVisible = true;

  Future<void> _login() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setBool('islogin', true);
    await prefs.setString('username', _username.text);

    Navigator.pushReplacementNamed(context, '/homepage');
  }

  @override
  void dispose() {
    _username.dispose();
    _password.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      resizeToAvoidBottomInset: false,
      backgroundColor: Colors.purple.shade100,
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.symmetric(vertical: 150, horizontal: 25),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              greetings(),
              const SizedBox(height: 100),
              formFields(),
              const SizedBox(height: 15),
              buttons(),
            ],
          ),
        ),
      ),
    );
  }

  Widget greetings() {
    return const Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          'Welcome Hooman!',
          style: TextStyle(fontSize: 30, fontWeight: FontWeight.bold),
        ),
        SizedBox(height: 5),
        Text(
          'Please enter your username and password.',
          style: TextStyle(fontSize: 20),
        ),
      ],
    );
  }

  Widget formFields() {
    return Form(
        key: _formKey,
        child: Column(
          children: [
            TextFormField(
              validator: (value) {
                if (value == null || value.isEmpty) {
                  return 'Field harus di isi.';
                }
                return null;
              },
              controller: _username,
              decoration: fieldTheme.copyWith(label: const Text('username')),
            ),
            const SizedBox(height: 10),
            TextFormField(
              validator: (value) {
                if (value == null || value.isEmpty) {
                  return 'Field harus di isi.';
                }
                return null;
              },
              controller: _password,
              obscureText: _passwordVisible,
              decoration: fieldTheme.copyWith(
                  label: const Text('password'),
                  suffixIcon: IconButton(
                      icon: Icon(
                        _passwordVisible
                            ? Icons.visibility
                            : Icons.visibility_off,
                      ),
                      onPressed: () {
                        setState(() {
                          _passwordVisible = !_passwordVisible;
                        });
                      })),
            ),
          ],
        ));
  }

  Widget buttons() {
    return Row(
      mainAxisAlignment: MainAxisAlignment.end,
      children: [
        Align(
            alignment: Alignment.bottomRight,
            child: TextButton(
                onPressed: () {}, child: const Text('Forged Password'))),
        Align(
            alignment: Alignment.bottomRight,
            child: TextButton(
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    _login();
                  }
                },
                child: const Text('Login'))),
      ],
    );
  }
}
